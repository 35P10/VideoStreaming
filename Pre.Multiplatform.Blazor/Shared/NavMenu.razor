@using Microsoft.AspNetCore.Components;
@inject NavigationManager NavigationManager;
@using Pre.MultiPlatform.Blazor.Integration;
@inject VideoStreamingApiHandler VideoStreamingApiHandler;
@using System.Net.Http.Headers;

<nav>
    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="oi oi-home" aria-hidden="true"></span>
    </NavLink>
    <div class="searchbar">
        <InputText class="searchinput" @bind-Value="searchQuery" style="flex: 1; max-width: 50vw"/>
        <button @onclick="Search">
            <span class="oi oi-magnifying-glass" aria-hidden="true"></span>
        </button>
    </div>
    <button @onclick="SubirVideo">
        @switch (uploadStatus)
        {
            case 1:
                <span class="oi oi-data-transfer-upload" aria-hidden="true"></span>
                break;
            case 2:
                <span class="oi oi-check" aria-hidden="true"></span>
                break;
            case 3:
                <span class="oi oi-x" aria-hidden="true"></span>
                break;
            case 4:
                <span class="oi oi-ellipses" aria-hidden="true"></span>
                break;
            default:
                <span class="oi oi-data-transfer-upload" aria-hidden="true"></span>
                break;
        }
    </button>
</nav>

@code {
    private string searchQuery;
    int uploadStatus = 1;

    private void Search()
    {
        NavigationManager.NavigateTo($"/results/{searchQuery}");
    }

    private async Task SubirVideo()
    {
        FileResult fileResult = await FilePicker.PickAsync(new PickOptions
            {
                FileTypes = FilePickerFileType.Videos,
                PickerTitle = "Seleccionar Video"
            });

        if (fileResult != null)
        {
            uploadStatus = 4;
            StateHasChanged();
            string filePath = fileResult.FullPath;
            bool res = await VideoStreamingApiHandler.UploadFileAsync(filePath);
            if(res)
            {
                uploadStatus = 2;
            }
            else
            {
                uploadStatus = 3;
            }
            StateHasChanged();
        }

        await Task.Delay(2000);
        uploadStatus = 1;
        StateHasChanged();
    }
}